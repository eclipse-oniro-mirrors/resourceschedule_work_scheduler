/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

sequenceable work_info..OHOS.WorkScheduler.WorkInfo;
interface OHOS.WorkScheduler.IWorkSchedService {
    void StartWork([in] WorkInfo workInfo);
    void StartWorkForInner([in] WorkInfo workInfo);
    void StopWork([in] WorkInfo workInfo);
    void StopWorkForInner([in] WorkInfo workInfo, [in] boolean needCancel);
    void StopAndCancelWork([in] WorkInfo workInfo);
    void StopAndClearWorks();
    void IsLastWorkTimeout([in] int workId, [out] boolean isTimeout);
    void ObtainAllWorks([out] List<WorkInfo> workInfos);
    void ObtainWorksByUidAndWorkIdForInner([in] int uid, [out] List<WorkInfo> workInfos, [in] int workId);
    void GetWorkStatus([in] int workId, [out] WorkInfo workInfo);
    void GetAllRunningWorks([out] List<WorkInfo> workInfos);
    void PauseRunningWorks([in] int uid);
    void ResumePausedWorks([in] int uid);
    void SetWorkSchedulerConfig([in] String configData, [in] int sourceType);
    void StopWorkForSA([in] int saId);
}