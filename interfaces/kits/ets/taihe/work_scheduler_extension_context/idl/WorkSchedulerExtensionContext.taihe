/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@!namespace("WorkSchedulerExtensionContext")
@!sts_inject_into_module("
  import type Want from '@ohos.app.ability.Want';
  import ExtensionContext from 'application.ExtensionContext';
")
@!sts_inject("""
  { loadLibrary("work_scheduler_extension_context_ani.z"); }
""")

@class
interface WorkSchedulerExtensionContext_inner {
  @gen_promise("startServiceExtensionAbility")
  StartServiceExtensionAbilitySync(want: @sts_type("Want") Opaque): void;
  @gen_promise("stopServiceExtensionAbility")
  StopServiceExtensionAbilitySync(want: @sts_type("Want") Opaque): void;
}

function Create():WorkSchedulerExtensionContext_inner;

@!sts_inject("""
export class WorkSchedulerExtensionContext extends ExtensionContext {
inner: WorkSchedulerExtensionContext_inner;

startServiceExtensionAbility(want: Want): Promise<void> {
  return this.inner.startServiceExtensionAbility(want);
}

stopServiceExtensionAbility(want: Want): Promise<void> {
  return this.inner.stopServiceExtensionAbility(want);
}

constructor() {
  this.inner = create();
}

constructor(param: WorkSchedulerExtensionContext_inner) {
  this.inner = param;
}
}
""")