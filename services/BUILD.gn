# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//foundation/resourceschedule/work_scheduler/workscheduler.gni")

config("worksched_private_config") {
  include_dirs = [ "${worksched_service_path}/zidl/include" ]
}

config("worksched_public_config") {
  include_dirs = [ "native/include" ]
}

ohos_shared_library("workschedservice") {
  sources = [
    "native/src/conditions/battery_level_listener.cpp",
    "native/src/conditions/battery_status_listener.cpp",
    "native/src/conditions/charger_listener.cpp",
    "native/src/conditions/network_listener.cpp",
    "native/src/conditions/storage_listener.cpp",
    "native/src/conditions/timer_listener.cpp",
    "native/src/policy/app_data_clear_listener.cpp",
    "native/src/policy/app_removed_listener.cpp",
    "native/src/policy/memory_policy.cpp",
    "native/src/policy/thermal_policy.cpp",
    "native/src/watchdog.cpp",
    "native/src/work_conn_manager.cpp",
    "native/src/work_event_handler.cpp",
    "native/src/work_policy_manager.cpp",
    "native/src/work_queue.cpp",
    "native/src/work_queue_event_handler.cpp",
    "native/src/work_queue_manager.cpp",
    "native/src/work_scheduler_connection.cpp",
    "native/src/work_scheduler_service.cpp",
    "native/src/work_status.cpp",
    "zidl/src/work_sched_service_stub.cpp",
    "zidl/src/work_scheduler_proxy.cpp",
  ]

  configs = [ ":worksched_private_config" ]

  public_configs = [ ":worksched_public_config" ]

  deps = [
    "${worksched_frameworks_path}:workschedclient",
    "${worksched_frameworks_path}/extension:workschedextension",
    "${worksched_utils_path}:workschedutils",
    "//third_party/jsoncpp",
  ]

  external_deps = [
    "ability_base:want",
    "ability_runtime:ability_manager",
    "ability_runtime:app_manager",
    "battery_manager_native:batterysrv_client",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "common_event_service:cesfwk_innerkits",
    "eventhandler:libeventhandler",
    "hisysevent_native:libhisysevent",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "netmanager_base:net_conn_manager_if",
    "safwk:system_ability_fwk",
    "samgr_standard:samgr_proxy",
    "thermal_manager:thermalsrv_client",
    "utils_base:utils",
  ]

  part_name = "${worksched_native_part_name}"
}
